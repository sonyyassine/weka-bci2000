// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision: 1813 $
// File generated on 1/23/2008 3:17:18 PM from Type Library described below.

// ************************************************************************  //
// Type Lib: c:\TDT\ActiveX\zBUSx.ocx (1)
// LIBID: {10055D3E-3938-4652-B6A2-6A6A4184D18D}
// LCID: 0
// Helpfile: c:\TDT\ActiveX\zBUSx.hlp
// HelpString: zBUSx ActiveX Control module
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINDOWS\System32\stdole2.tlb)
// ************************************************************************ //
#ifndef   ZBUSXLib_OCXH
#define   ZBUSXLib_OCXH

#pragma option push -b -w-inl

#include <olectrls.hpp>
#include <oleserver.hpp>
#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0600)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "ZBUSXLib_TLB.h"
namespace Zbusxlib_tlb
{

// *********************************************************************//
// HelpString: zBUSx ActiveX Control module
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TZBUSx
// Help String      : ZBUSx Control
// Default Interface: _DZBUSx
// Def. Intf. Object: _DZBUSxDisp
// Def. Intf. DISP? : Yes
// Event   Interface: _DZBUSxEvents
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host ZBUSx Control in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TZBUSx : public TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //

  // Default Interace of OCX
  //
  _DZBUSxDisp m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //

  // Static variables used by all instances of OCX proxy
  //
  static TControlData CControlData;
  static GUID         CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  _DZBUSxDisp __fastcall GetDefaultInterface();
  _DZBUSxDisp __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TZBUSx(TComponent* AOwner) : TOleControl(AOwner)
  {};
  virtual  __fastcall TZBUSx(HWND        Parent) : TOleControl(Parent)
  {};

  // OCX methods
  //
  long            __fastcall Connect(long Interface);
  long            __fastcall GetDeviceAddr(long DevType, long DevNum);
  long            __fastcall GetDeviceVersion(long DevType, long DevNum);
  long            __fastcall HardwareReset(long RackNum);
  long            __fastcall FlushIO(long RackNum);
  long            __fastcall zBusTrigA(long RackNum, long zTrgMode, long Delay);
  long            __fastcall zBusTrigB(long RackNum, long zTrgMode, long Delay);
  long            __fastcall zBusSync(long RackMask);
  long            __fastcall KillCode(long DevType, long DevNum, long MagicCode);
  BSTR            __fastcall GetError(void);
  BSTR            __fastcall GetDeviceAt(long RackNum, long PosNum, long* DevID, long* DevNum);
  long            __fastcall ConnectZBUS(BSTR IntName);
  void            __fastcall AboutBox(void);

  // OCX properties
  //
  __property _DZBUSxDisp ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property Visible;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //

  // OCX Events
  //
};
typedef TZBUSx  TZBUSxProxy;

};     // namespace Zbusxlib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Zbusxlib_tlb;
#endif

#pragma option pop

#endif // ZBUSXLib_OCXH

Storage:Session string SubjectName= TargetFast Name % % // subject alias
Source:gUSBampADC int SourceCh= 16 16 1 128 // number of digitized channels total
Source:gUSBampADC int SampleBlockSize= 64 5 1 128 // number of samples per block
Source:gUSBampADC int SamplingRate= 2400 128 1 40000 // the signal sampling rate
Visualize:Source%20Signal int VisualizeSourceDecimation= 16 1 0 % // decimation factor for raw brain signal
Application:Sequencing float PreRunDuration= 0s 2s 0 % // duration of pause preceding first trial
Application:Sequencing float PreFeedbackDuration= 60ms 2s 0 % // duration of target display prior to feedback
Application:Sequencing float FeedbackDuration= 5ms 3s 0 % // duration of feedback
Application:Sequencing float PostFeedbackDuration= 0s 1s 0 % // duration of result display after feedback
Application:Sequencing float ITIDuration= 120ms 1s 0 % // duration of inter-trial interval
Application:Sequencing float MinRunLength= 30s 120s 0 % // minimum duration of a run
Application:Targets int NumberTargets= 1 2 0 15 // number of targets
Application:Sequencing float MaxFeedbackDuration= 0s % 0 % // abort a trial after this amount of feedback time has expired
Application:3DEnvironment floatlist CameraPos= 3 50 50 150 // camera position vector in percent coordinates of 3D area
Application:3DEnvironment floatlist CameraAim= 3 50 50 50 // camera aim point in percent coordinates
Application:3DEnvironment float CameraProjection= 0 0 0 2 // projection type: 0: flat 1: wide angle perspective 2: narrow angle perspective (enumeration)
Application:3DEnvironment floatlist LightSourcePos= 3 50 50 100 // light source position in percent coordinates
Application:3DEnvironment int LightSourceColor= 0x808080 // light source RGB color (color)
Application:3DEnvironment int WorkspaceBoundaryColor= 0xffffff 0 % % // workspace boundary color (0xff000000 for invisible) (color)
Application:3DEnvironment string WorkspaceBoundaryTexture= images/grid.bmp // path of workspace boundary texture (inputfile)
Application:Cursor float CursorWidth= 10 10 0.0 % // feedback cursor width in percent of screen width
Application:Cursor int CursorColorFront= 0xff0000 // cursor color when it is at the front of the workspace (color)
Application:Cursor int CursorColorBack= 0xffff00 // cursor color when it is in the back of the workspace (color)
Application:Cursor string CursorTexture= % // path of cursor texture (inputfile)
Application:Cursor floatlist CursorPos= 3 50 50 50 // cursor starting position
Application:Targets matrix Targets= 1 { pos%20x pos%20y pos%20z width%20x width%20y width%20z } 50 50 50 40 40 8 // target positions and widths in percentage coordinates
Application:Targets int TargetColor= 0xffffff // target color (color)
Application:Targets string TargetTexture= % // path of target texture (inputfile)
Application:Targets int TestAllTargets= 1 0 0 1 // test all targets for cursor collision? 0: test only the visible current target 1: test all targets (enumeration)
